#!/usr/bin/env bash

bound_=("c-bound-mcallester" "c-bound-seeger" "c-bound-joint"
        "bound-risk" "bound-joint")

###############################################################################

data_=("letter_a_b" "letter_d_o" "letter_o_q" "credit" 
       "heart" "glass" "tictactoe" "usvotes" "wdbc")

for data in "${data_[@]}"; do
  for bound in "${bound_[@]}"; do
    python optimize_pb_bound.py $data $bound results.csv $data--$bound \
    --voter=tree --nb-tree=100 --prior=0.5 \
    --not-complemented --not-quasi-uniform --epoch=2000
  done
done
for data in "${data_[@]}"; do
    python optimize_cb_boost.py $data results.csv $data--cb-boost \
    --voter=tree --nb-tree=100 --prior=0.5
    python optimize_mincq.py $data results.csv $data--mincq \
    --voter=tree --nb-tree=100 --prior=0.5
done

###############################################################################

data_=("adult" "mnist_1_7" "mnist_5_6" "mnist_4_9" 
       "fashion_to_pu" "fashion_sa_bo" "fashion_co_sh")

for data in "${data_[@]}"; do
  for bound in "${bound_[@]}"; do
    python optimize_pb_bound.py $data $bound results.csv $data--$bound \
    --voter=tree --nb-tree=100 --prior=0.5 \
    --not-complemented --not-quasi-uniform --epoch=200
  done
done
for data in "${data_[@]}"; do
    python optimize_cb_boost.py $data results.csv $data--cb-boost \
    --voter=tree --nb-tree=100 --prior=0.5
    python optimize_mincq.py ${data}_short results.csv $data--mincq \
    --voter=tree --nb-tree=100 --prior=0.5
done

###############################################################################

python plot/plot_cbound.py results.csv
python plot/plot_comparison.py results.csv
